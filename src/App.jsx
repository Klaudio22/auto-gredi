import React, { createContext, useContext, useEffect, useState } from 'react'
import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom'
import products from './data/products.json'

const CartContext = createContext();
function useCart(){ return useContext(CartContext); }
function CartProvider({children}){
  const [items, setItems] = useState(()=>{
    try { const raw = localStorage.getItem('auto_gredi_cart'); return raw?JSON.parse(raw):[] } catch(e){ return [] }
  });
  useEffect(()=>{ localStorage.setItem('auto_gredi_cart', JSON.stringify(items)) },[items]);
  function add(p, qty=1){ setItems(prev=>{ const f=prev.find(x=>x.id===p.id); if(f) return prev.map(x=>x.id===p.id?{...x,qty:x.qty+qty}:x); return [...prev,{...p,qty}] }) }
  function remove(id){ setItems(prev=>prev.filter(x=>x.id!==id)) }
  function updateQty(id,qty){ setItems(prev=>prev.map(x=>x.id===id?{...x,qty:Math.max(1,qty)}:x)) }
  function clear(){ setItems([]) }
  const subtotal = items.reduce((s,it)=>s+it.price*it.qty,0);
  return <CartContext.Provider value={{items,add,remove,updateQty,clear,subtotal}}>{children}</CartContext.Provider>
}

const LangContext = createContext();
function useLang(){ return useContext(LangContext); }

function Topbar(){ return (<div className='bg-gray-900 text-gray-100 text-sm py-1'><div className='container px-4 flex justify-between'><div>Telefon: +355 69 000 0000</div><div>Orari: Hë - Sht 09:00 - 18:00</div></div></div>) }

function Navbar(){ const {items} = useCart(); const {lang,setLang,t} = useLang(); return (
  <nav className='bg-white shadow'><div className='container px-4 py-4 flex items-center justify-between'>
    <Link to='/' className='flex items-center gap-3'>
      <div className='w-12 h-12 bg-red-600 rounded flex items-center justify-center text-white font-bold'>AG</div>
      <div><div className='font-bold text-lg'>AUTO GREDI</div><div className='text-xs text-gray-500'>{t('pjesekembimi')}</div></div>
    </Link>
    <div className='hidden md:flex items-center gap-6'>
      <Link to='/' className='hover:text-red-600'>{t('home')}</Link>
      <Link to='/store' className='hover:text-red-600'>{t('store')}</Link>
      <Link to='/contact' className='hover:text-red-600'>{t('contact')}</Link>
    </div>
    <div className='flex items-center gap-3'>
      <Link to='/login' className='text-sm px-3 py-2 border rounded'>{t('login')}</Link>
      <Link to='/cart' className='relative px-3 py-2'>{t('cart')}<span className='ml-2 bg-red-600 text-white rounded-full text-xs px-2 py-1'>{items.length}</span></Link>
      <div className='ml-3'><select value={lang} onChange={e=>setLang(e.target.value)} className='border rounded p-1 text-sm'><option value='sq'>Shqip</option><option value='en'>English</option></select></div>
    </div>
  </div></nav>
) }

function Footer(){ const {t} = useLang(); return (<footer className='bg-gray-800 text-gray-200 mt-12'><div className='container px-4 py-8 grid md:grid-cols-3 gap-6'><div><div className='font-bold text-lg'>AUTO GREDI</div><p className='mt-2 text-sm'>{t('company_desc')}</p></div><div><div className='font-semibold'>Menu</div><ul className='mt-2 text-sm space-y-1'><li><Link to='/store'>{t('store')}</Link></li><li><Link to='/contact'>{t('contact')}</Link></li></ul></div><div><div className='font-semibold'>Kontakti</div><p className='text-sm mt-2'>Email: info@autogredi.al</p><p className='text-sm'>Tel: +355 69 000 0000</p></div></div><div className='text-center text-xs py-4 border-t border-gray-700'>© {new Date().getFullYear()} AUTO GREDI. {t('rights')}</div></footer>) }

function Home(){ const {t} = useLang(); return (<div><section className='bg-gradient-to-r from-gray-100 to-white py-20'><div className='container px-4 grid md:grid-cols-2 gap-6 items-center'><div><h1 className='text-4xl font-bold mb-4'>AUTO GREDI — {t('trusted_parts')}</h1><p className='text-gray-700 mb-6'>{t('hero_text')}</p><Link to='/store' className='inline-block bg-red-600 text-white px-6 py-3 rounded'>{t('shop_now')}</Link></div><div><img src='/logo.svg' alt='hero' className='rounded shadow' /></div></div></section><section className='container px-4 py-12'><h2 className='text-2xl font-semibold mb-4'>{t('recommended')}</h2><div className='grid sm:grid-cols-2 md:grid-cols-4 gap-6'>{products.map(p=> (<div key={p.id} className='border rounded overflow-hidden'><img src={p.img.replace('/public','') || '/logo.svg'} alt={p.title_sq} className='w-full h-40 object-cover' /><div className='p-3'><div className='font-semibold'>{p.title_sq}</div><div className='text-sm text-gray-600'>SKU: {p.sku}</div><div className='mt-2 flex items-center justify-between'><div className='font-bold'>€{p.price.toFixed(2)}</div><Link to='/store' className='text-sm text-red-600'>{t('view')}</Link></div></div></div>))}</div></section></div>) }

function Contact(){ const {t} = useLang(); const [form,setForm]=useState({emri:'',email:'',mesazhi:''}); const [sent,setSent]=useState(false); function handleChange(e){ setForm({...form,[e.target.name]:e.target.value}) } function handleSubmit(e){ e.preventDefault(); setSent(true) } return (<div className='container px-4 py-12'><h2 className='text-2xl font-semibold mb-4'>{t('contact_us')}</h2>{sent?<div className='bg-green-100 border border-green-200 p-4 rounded'>{t('thank_you')}</div>:<form onSubmit={handleSubmit} className='max-w-xl bg-white p-6 rounded shadow'><label className='block mb-3'><div className='text-sm font-medium'>{t('name')}</div><input name='emri' onChange={handleChange} value={form.emri} className='w-full border p-2 rounded mt-1' /></label><label className='block mb-3'><div className='text-sm font-medium'>Email</div><input name='email' onChange={handleChange} value={form.email} className='w-full border p-2 rounded mt-1' /></label><label className='block mb-3'><div className='text-sm font-medium'>{t('message')}</div><textarea name='mesazhi' onChange={handleChange} value={form.mesazhi} className='w-full border p-2 rounded mt-1' rows={5} /></label><button className='bg-red-600 text-white px-4 py-2 rounded'>{t('send')}</button></form>}</div>) }

function Store(){ const {add} = useCart(); const {t,lang} = useLang(); const [query,setQuery]=useState(''); const filtered = products.filter(p=> p.title_sq.toLowerCase().includes(query.toLowerCase()) || p.sku.toLowerCase().includes(query.toLowerCase())); return (<div className='container px-4 py-12'><div className='flex items-center justify-between mb-6'><h2 className='text-2xl font-semibold'>{t('store')}</h2><input placeholder={t('search')} value={query} onChange={e=>setQuery(e.target.value)} className='border p-2 rounded' /></div><div className='grid sm:grid-cols-2 md:grid-cols-4 gap-6'>{filtered.map(p=> (<div key={p.id} className='border rounded overflow-hidden flex flex-col'><img src={p.img.replace('/public','') || '/logo.svg'} alt={p.title_sq} className='w-full h-40 object-cover' /><div className='p-3 flex-1 flex flex-col'><div className='font-semibold'>{lang==='sq'?p.title_sq:p.title_en}</div><div className='text-sm text-gray-600'>SKU: {p.sku}</div><div className='mt-2 flex items-center justify-between'><div className='font-bold'>€{p.price.toFixed(2)}</div><button onClick={()=>add(p)} className='bg-red-600 text-white px-3 py-1 rounded'>{t('add')}</button></div></div></div>))}</div></div>) }

function CartPage(){ const {items,remove,updateQty,subtotal} = useCart(); const {t} = useLang(); const navigate = useNavigate(); return (<div className='container px-4 py-12'><h2 className='text-2xl font-semibold mb-6'>{t('your_cart')}</h2>{items.length===0?(<div className='p-6 bg-yellow-50 border rounded'>{t('cart_empty')} <Link to='/store' className='text-red-600'> {t('go_store')}</Link></div>):(<div className='grid md:grid-cols-3 gap-6'><div className='md:col-span-2 space-y-4'>{items.map(it=> (<div key={it.id} className='flex items-center gap-4 border rounded p-3'><img src={it.img.replace('/public','') || '/logo.svg'} alt={it.title_sq} className='w-24 h-24 object-cover' /><div className='flex-1'><div className='font-semibold'>{it.title_sq}</div><div className='text-sm text-gray-600'>SKU: {it.sku}</div><div className='mt-2 flex items-center gap-3'><input type='number' value={it.qty} min={1} onChange={e=>updateQty(it.id, Number(e.target.value))} className='w-20 border p-1 rounded' /><div className='font-bold'>€{(it.price*it.qty).toFixed(2)}</div><button onClick={()=>remove(it.id)} className='text-sm text-red-600'>{t('remove')}</button></div></div></div>))}</div><div className='border rounded p-4'><div className='font-semibold'>{t('summary')}</div><div className='flex justify-between mt-2'><span>{t('subtotal')}</span><span>€{subtotal.toFixed(2)}</span></div><div className='mt-4'><button onClick={()=>navigate('/checkout')} className='w-full bg-red-600 text-white py-2 rounded'>{t('checkout')}</button></div><div className='mt-2 text-xs text-gray-500'>{t('guest_note')}</div><div className='mt-3'><Link to='/login' className='text-sm underline'>{t('login')}</Link></div></div></div>)}</div>) }

function Checkout(){ const {items,subtotal,clear} = useCart(); const {t} = useLang(); const [guest,setGuest]=useState(true); const [form,setForm]=useState({emri:'',email:'',adresa:'',qyteti:'',kodi:''}); const [done,setDone]=useState(false); function handleChange(e){ setForm({...form,[e.target.name]:e.target.value}) } function handleSubmit(e){ e.preventDefault(); clear(); setDone(true) } if(items.length===0 && !done) return (<div className='container px-4 py-12'>{t('cart_empty')} <Link to='/store' className='text-red-600'> {t('go_store')}</Link></div>); return (<div className='container px-4 py-12'><h2 className='text-2xl font-semibold mb-4'>{t('checkout')}</h2>{done?<div className='bg-green-100 border rounded p-6'>{t('order_received')}</div>:(<div className='grid md:grid-cols-3 gap-6'><div className='md:col-span-2'><div className='mb-4'><label className='inline-flex items-center gap-2'><input type='checkbox' checked={guest} onChange={e=>setGuest(e.target.checked)} /> {t('continue_guest')}</label></div><form onSubmit={handleSubmit} className='bg-white p-6 rounded border'><div className='grid sm:grid-cols-2 gap-4'><label><div className='text-sm'>{t('full_name')}</div><input name='emri' value={form.emri} onChange={handleChange} className='w-full border p-2 rounded mt-1' required /></label><label><div className='text-sm'>Email</div><input name='email' type='email' value={form.email} onChange={handleChange} className='w-full border p-2 rounded mt-1' required /></label><label className='sm:col-span-2'><div className='text-sm'>{t('address')}</div><input name='adresa' value={form.adresa} onChange={handleChange} className='w-full border p-2 rounded mt-1' required /></label><label><div className='text-sm'>{t('city')}</div><input name='qyteti' value={form.qyteti} onChange={handleChange} className='w-full border p-2 rounded mt-1' required /></label><label><div className='text-sm'>{t('postal')}</div><input name='kodi' value={form.kodi} onChange={handleChange} className='w-full border p-2 rounded mt-1' /></label></div><div className='mt-4'><button className='bg-red-600 text-white px-4 py-2 rounded'>{t('place_order')}</button></div></form></div><div className='border rounded p-4'><div className='font-semibold'>{t('order_review')}</div><div className='mt-3 space-y-2'>{items.map(it=>(<div key={it.id} className='flex justify-between text-sm'><div>{it.title_sq} x{it.qty}</div><div>€{(it.price*it.qty).toFixed(2)}</div></div>))}</div><div className='mt-4 flex justify-between font-bold'>Totali <span>€{subtotal.toFixed(2)}</span></div></div></div>)}</div>) }

function Login(){ const {t} = useLang(); const [form,setForm]=useState({email:'',password:''}); const [msg,setMsg]=useState(null); function handleChange(e){ setForm({...form,[e.target.name]:e.target.value}) } function handleSubmit(e){ e.preventDefault(); if(form.email && form.password){ setMsg({type:'success',text:t('login_success')}) } else setMsg({type:'error',text:t('fill_data')}) } return (<div className='container px-4 py-12 max-w-md'><h2 className='text-2xl font-semibold mb-4'>{t('login')}</h2>{msg&&<div className={`p-3 mb-4 rounded ${msg.type==='success'?'bg-green-100':'bg-red-100'}`}>{msg.text}</div>}<form onSubmit={handleSubmit} className='bg-white p-6 rounded border'><label className='block mb-3'><div className='text-sm'>Email</div><input name='email' value={form.email} onChange={handleChange} className='w-full border p-2 rounded mt-1' /></label><label className='block mb-3'><div className='text-sm'>{t('password')}</div><input name='password' type='password' value={form.password} onChange={handleChange} className='w-full border p-2 rounded mt-1' /></label><div className='flex items-center gap-3'><button className='bg-red-600 text-white px-4 py-2 rounded'>{t('login')}</button><Link to='/' className='text-sm'> {t('continue_guest')}</Link></div></form></div>) }

const STRINGS = { sq: { home: 'Kreu', store: 'Dyqan', contact: 'Kontakti', login: 'Hyr / Regjistrohu', cart: 'Shporta', pjesekembimi: 'Pjesë këmbimi për makina', company_desc: 'Shitje dhe furnizim me pjesë këmbimi për automjete. Mbështetje teknike dhe garanci.', rights: 'Të gjitha të drejtat e rezervuara.', trusted_parts: 'Pjesë këmbimi të besueshme', hero_text: 'Gjeni pjesët më të mira për makinën tuaj: filtra, frenat, amortizatorë, dhe shumë të tjera. Dërgesë në të gjithë Shqipërinë.', shop_now: 'Shiko Dyqanin', recommended: 'Produkte të rekomanduara', view: 'Shiko', contact_us: 'Na Kontaktoni', thank_you: 'Faleminderit! Mesazhi juaj u dërgua.', name: 'Emri', message: 'Mesazhi', send: 'Dërgo', search: 'Kërko produkt', add: 'Shto', your_cart: 'Shporta juaj', cart_empty: 'Shporta është bosh.', go_store: 'Shko tek dyqani', remove: 'Hiq', summary: 'Përmbledhje', subtotal: 'Subtotal', checkout: 'Vazhdo tek Pagesa', guest_note: 'Mund të vazhdoni si mysafir (Checkout si Guest) ose të hyni në llogarinë tuaj.', continue_guest: 'Vazhdo si mysafir', full_name: 'Emri i plotë', address: 'Adresa e dorëzimit', city: 'Qyteti', postal: 'Kodi postar', place_order: 'Përfundo porosinë', order_review: 'Rishikim porosie', order_received: 'Faleminderit! Porosia juaj u pranua. Ne do t\'ju kontaktojmë për detajet e dërgesës.', login_success: 'Hyrje e suksesshme (demo).', fill_data: 'Ju lutem plotësoni të dhënat.', password: 'Fjalëkalimi', add_to_cart: 'Shto në shportë' }, en: { home: 'Home', store: 'Store', contact: 'Contact', login: 'Login / Register', cart: 'Cart', pjesekembimi: 'Auto Parts', company_desc: 'Sales and supply of automotive spare parts. Technical support and warranty.', rights: 'All rights reserved.', trusted_parts: 'Reliable spare parts', hero_text: 'Find the best parts for your car: filters, brakes, shock absorbers, and more. Delivery across Albania.', shop_now: 'Visit Store', recommended: 'Recommended products', view: 'View', contact_us: 'Contact us', thank_you: 'Thank you! Your message was sent.', name: 'Name', message: 'Message', send: 'Send', search: 'Search product', add: 'Add', your_cart: 'Your cart', cart_empty: 'Your cart is empty.', go_store: 'Go to store', remove: 'Remove', summary: 'Summary', subtotal: 'Subtotal', checkout: 'Proceed to Checkout', guest_note: 'You can checkout as guest or login to your account.', continue_guest: 'Continue as guest', full_name: 'Full name', address: 'Delivery address', city: 'City', postal: 'Postal code', place_order: 'Place order', order_review: 'Order review', order_received: 'Thank you! Your order is received. We will contact you with delivery details.', login_success: 'Login successful (demo).', fill_data: 'Please fill in required fields.', password: 'Password', add_to_cart: 'Add to cart' } };

export default function App(){ const [lang,setLang]=useState('sq'); const t=(k)=>STRINGS[lang][k]||k; return (<CartProvider><LangContext.Provider value={{lang,setLang,t}}><Router><div className='min-h-screen flex flex-col'><Topbar /><Navbar /><main className='flex-1'><Routes><Route path='/' element={<Home/>} /><Route path='/contact' element={<Contact/>} /><Route path='/store' element={<Store/>} /><Route path='/cart' element={<CartPage/>} /><Route path='/checkout' element={<Checkout/>} /><Route path='/login' element={<Login/>} /><Route path='*' element={<div className='container px-4 py-12'>Page not found. <Link to='/'>Go back</Link></div>} /></Routes></main><Footer /></div></Router></LangContext.Provider></CartProvider> }
